package com.surveyplatform.app.mapper;

import com.surveyplatform.app.dto.VirtualAssistanceDto;
import com.surveyplatform.app.persistance.entities.FormularioFinanceDirector;
import com.surveyplatform.app.persistance.entities.FormularioGeneralManagement;
import com.surveyplatform.app.persistance.entities.FormularioGeneralSalesManager;
import com.surveyplatform.app.persistance.entities.FormularioInternetSalesManager;
import com.surveyplatform.app.persistance.entities.FormularioNewCarSalesManager;
import com.surveyplatform.app.persistance.entities.FormularioPromotionalEvent;
import com.surveyplatform.app.persistance.entities.FormularioSalesManagerPreOwned;
import com.surveyplatform.app.persistance.entities.FormularioVirtualAssistant;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

@Mapper
public interface VirtualAssistanceMapper {

    VirtualAssistanceMapper MAPPER = Mappers.getMapper(VirtualAssistanceMapper.class);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "date", target = "date", dateFormat = "yyyy-MM-dd")
    FormularioVirtualAssistant toEntityFormularioVirtualAssistant(VirtualAssistanceDto dto);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "generalManager.reviewedContracts", target = "reviewedContracts")
    @Mapping(source = "generalManager.warrantyReceivables", target = "warrantyReceivables")
    @Mapping(source = "generalManager.titles", target = "titles")
    @Mapping(source = "generalManager.rebatesReceivables", target = "rebatesReceivables")
    @Mapping(source = "generalManager.reviewInsurance", target = "reviewInsurance")
    @Mapping(source = "generalManager.reviewExpense", target = "reviewExpense")
    @Mapping(source = "generalManager.attendedUnemploymentHearings", target = "attendedUnemploymentHearings")
    @Mapping(source = "generalManager.documentedEmployeeIncident", target = "documentedEmployeeIncident")
    @Mapping(source = "generalManager.documentedAccidentReports", target = "documentedAccidentReports")
    @Mapping(source = "generalManager.reviewedMarketing", target = "reviewedMarketing")
    @Mapping(source = "generalManager.compliance", target = "compliance")
    @Mapping(source = "generalManager.gatheredVirtualAssistantSurveys", target = "gatheredVirtualAssistantSurveys")
    @Mapping(source = "generalManager.romiReportAnalyzed", target = "romiReportAnalyzed")
    @Mapping(source = "generalManager.reviewedForecast", target = "reviewedForecast")
    @Mapping(source = "generalManager.correctiveActionSet", target = "correctiveActionSet")
    @Mapping(source = "generalManager.developedMarketingStrategies", target = "developedMarketingStrategies")
    @Mapping(source = "generalManager.developedMarketingWithVendors", target = "developedMarketingWithVendors")
    @Mapping(source = "generalManager.ensuredTrainingStandards", target = "ensuredTrainingStandards")
    @Mapping(source = "generalManager.ensuredMarketingDeployment", target = "ensuredMarketingDeployment")
    @Mapping(source = "generalManager.currentTurnoverRatio", target = "currentTurnoverRatio")
    @Mapping(source = "generalManager.setNewGoal", target = "setNewGoal")
    @Mapping(source = "generalManager.developedRecognitionProgram", target = "developedRecognitionProgram")
    @Mapping(source = "generalManager.achievedProfitability", target = "achievedProfitability")
    FormularioGeneralManagement toEntityFormularioGeneralManagement(VirtualAssistanceDto dto);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "generalSalesManager.storeNewVehiclesSalesMet", target = "storeNewVehiclesSalesMet")
    @Mapping(source = "generalSalesManager.storePreOwnedVehicleSalesMet", target = "storePreOwnedVehicleSalesMet")
    @Mapping(source = "generalSalesManager.reconTimeAt4DaysForTheMonth", target = "reconTimeAt4DaysForTheMonth")
    @Mapping(source = "generalSalesManager.storeFinanceObjectivesMet", target = "storeFinanceObjectivesMet")
    @Mapping(source = "generalSalesManager.newVehicleInventoryNext90Days", target = "newVehicleInventoryNext90Days")
    @Mapping(source = "generalSalesManager.preOwnedVehicleInventoryNext60Days", target = "preOwnedVehicleInventoryNext60Days")
    @Mapping(source = "generalSalesManager.allCoOpAdDollarsAppliedFor", target = "allCoOpAdDollarsAppliedFor")
    @Mapping(source = "generalSalesManager.advertisingCompliantWithStateLaws", target = "advertisingCompliantWithStateLaws")
    @Mapping(source = "generalSalesManager.adPlanReadyForNextMonth", target = "adPlanReadyForNextMonth")
    @Mapping(source = "generalSalesManager.websiteReviewConducted", target = "websiteReviewConducted")
    @Mapping(source = "generalSalesManager.performanceReviewNewCarManagers", target = "performanceReviewNewCarManagers")
    @Mapping(source = "generalSalesManager.performanceReviewPreOwnedSalesManagers", target = "performanceReviewPreOwnedSalesManagers")
    @Mapping(source = "generalSalesManager.performanceReviewFinanceManagers", target = "performanceReviewFinanceManagers")
    @Mapping(source = "generalSalesManager.performanceReviewInternetSalesManager", target = "performanceReviewInternetSalesManager")
    @Mapping(source = "generalSalesManager.financialStatementReview", target = "financialStatementReview")
    @Mapping(source = "generalSalesManager.trainingInitiativesEstablished", target = "trainingInitiativesEstablished")
    @Mapping(source = "generalSalesManager.coachingSessionsConducted", target = "coachingSessionsConducted")
    @Mapping(source = "generalSalesManager.csiScoresAchievedForTheMonth", target = "csiScoresAchievedForTheMonth")
    @Mapping(source = "generalSalesManager.goalsSetForTheFollowingMonth", target = "goalsSetForTheFollowingMonth")
    @Mapping(source = "generalSalesManager.goalsAndBudgetsCommunicatedToTeam", target = "goalsAndBudgetsCommunicatedToTeam")
    @Mapping(source = "generalSalesManager.salesOperationsImprovementGrowth", target = "salesOperationsImprovementGrowth")
    @Mapping(source = "generalSalesManager.selfImprovementMaterial", target = "selfImprovementMaterial")
    @Mapping(source = "generalSalesManager.teamworkImprovementStrategies", target = "teamworkImprovementStrategies")
    @Mapping(source = "generalSalesManager.teamworkImprovementStrategiesNextMonth", target = "teamworkImprovementStrategiesNextMonth")
    @Mapping(source = "generalSalesManager.moraleImprovementStrategiesPreviousMonth", target = "moraleImprovementStrategiesPreviousMonth")
    @Mapping(source = "generalSalesManager.moraleImprovementStrategiesNextMonth", target = "moraleImprovementStrategiesNextMonth")
    @Mapping(source = "generalSalesManager.threeAreasForSelfImprovement", target = "threeAreasForSelfImprovement")
    FormularioGeneralSalesManager toEntityFormularioGeneralSalesManager(VirtualAssistanceDto dto);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "newCarSalesManager.conductedOneOnOnesDaily", target = "conductedOneOnOnesDaily")
    @Mapping(source = "newCarSalesManager.calledBackUnsoldTrafficDaily", target = "calledBackUnsoldTrafficDaily")
    @Mapping(source = "newCarSalesManager.allSalesTeamMembersFactoryCertified", target = "allSalesTeamMembersFactoryCertified")
    @Mapping(source = "newCarSalesManager.allSalesTeamMemberMetProductKnowledgeProficiency", target = "allSalesTeamMemberMetProductKnowledgeProficiency")
    @Mapping(source = "newCarSalesManager.customerSatisfactionScoresMetFactoryStandards", target = "customerSatisfactionScoresMetFactoryStandards")
    @Mapping(source = "newCarSalesManager.threeDayFollowUpCompleted", target = "threeDayFollowUpCompleted")
    @Mapping(source = "newCarSalesManager.conductedTwoTrainingSessionsPerWeek", target = "conductedTwoTrainingSessionsPerWeek")
    @Mapping(source = "newCarSalesManager.sixtyDealsClosedRequirementMet", target = "sixtyDealsClosedRequirementMet")
    @Mapping(source = "newCarSalesManager.conductedWalkaroundPresentationTraining", target = "conductedWalkaroundPresentationTraining")
    @Mapping(source = "newCarSalesManager.reviewedPhoneUpsCallTrackingDaily", target = "reviewedPhoneUpsCallTrackingDaily")
    @Mapping(source = "newCarSalesManager.conductedTwoPhoneTrainingSessions", target = "conductedTwoPhoneTrainingSessions")
    @Mapping(source = "newCarSalesManager.providedMotivationalMaterial", target = "providedMotivationalMaterial")
    @Mapping(source = "newCarSalesManager.maintainedInventoryLevels", target = "maintainedInventoryLevels")
    @Mapping(source = "newCarSalesManager.merchandisedAgedInventory", target = "merchandisedAgedInventory")
    @Mapping(source = "newCarSalesManager.developedSalesContests", target = "developedSalesContests")
    @Mapping(source = "newCarSalesManager.reviewedInternetResponseTime", target = "reviewedInternetResponseTime")
    @Mapping(source = "newCarSalesManager.reviewedInternetLostSales", target = "reviewedInternetLostSales")
    FormularioNewCarSalesManager toEntityNewCarSalesManager(VirtualAssistanceDto dto);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "salesManagerPreOwned.tradeAcquisition60PercentAppraisals", target = "tradeAcquisition60PercentAppraisals")
    @Mapping(source = "salesManagerPreOwned.zeroVehiclesOver90Days", target = "zeroVehiclesOver90Days")
    @Mapping(source = "salesManagerPreOwned.usedVehiclesAverageDaysInInventory", target = "usedVehiclesAverageDaysInInventory")
    @Mapping(source = "salesManagerPreOwned.vehiclesAcquisitionToMerchandising", target = "vehiclesAcquisitionToMerchandising")
    @Mapping(source = "salesManagerPreOwned.allCarfaxAutochecksConducted", target = "allCarfaxAutochecksConducted")
    @Mapping(source = "salesManagerPreOwned.inventoryMixedAlignedWithRateOfSale", target = "inventoryMixedAlignedWithRateOfSale")
    @Mapping(source = "salesManagerPreOwned.wholesaleGainForMonth", target = "wholesaleGainForMonth")
    @Mapping(source = "salesManagerPreOwned.metFactoryRequirementsForCertifiedVehicles", target = "metFactoryRequirementsForCertifiedVehicles")
    @Mapping(source = "salesManagerPreOwned.allVehiclesPricedWeeklyOnInternet", target = "allVehiclesPricedWeeklyOnInternet")
    @Mapping(source = "salesManagerPreOwned.allSpecialsUpdatedOnInternet", target = "allSpecialsUpdatedOnInternet")
    @Mapping(source = "salesManagerPreOwned.ninetyPercentVehiclesHavePhotosOnInternet", target = "ninetyPercentVehiclesHavePhotosOnInternet")
    @Mapping(source = "salesManagerPreOwned.allSalesStaffMetInTechnologyRequirements", target = "allSalesStaffMetInTechnologyRequirements")
    @Mapping(source = "salesManagerPreOwned.allAgedInventoryDisposedAtAuction", target = "allAgedInventoryDisposedAtAuction")
    @Mapping(source = "salesManagerPreOwned.policyExpensesDidNotExceed1PercentGross", target = "policyExpensesDidNotExceed1PercentGross")
    @Mapping(source = "salesManagerPreOwned.zeroLotDamageForMonth", target = "zeroLotDamageForMonth")
    @Mapping(source = "salesManagerPreOwned.driverLicensesCheckedBeforeTestDrives", target = "driverLicensesCheckedBeforeTestDrives")
    @Mapping(source = "salesManagerPreOwned.allLoanerAgreementsSigned", target = "allLoanerAgreementsSigned")
    @Mapping(source = "salesManagerPreOwned.allTestDrivesAccompaniedBySalesperson", target = "allTestDrivesAccompaniedBySalesperson")
    @Mapping(source = "salesManagerPreOwned.conductedTrainingSessionsTwoPerWeek", target = "conductedTrainingSessionsTwoPerWeek")
    @Mapping(source = "salesManagerPreOwned.reviewedUnsoldLeadsDaily", target = "reviewedUnsoldLeadsDaily")
    @Mapping(source = "salesManagerPreOwned.reviewedPhoneUpsDaily", target = "reviewedPhoneUpsDaily")
    @Mapping(source = "salesManagerPreOwned.conductedPhoneUpTraining", target = "conductedPhoneUpTraining")
    @Mapping(source = "salesManagerPreOwned.allAgedInventoryProperlyDisplayed", target = "allAgedInventoryProperlyDisplayed")
    @Mapping(source = "salesManagerPreOwned.establishedSalesContests", target = "establishedSalesContests")
    @Mapping(source = "salesManagerPreOwned.followedPricingGuidelinesToPromoteFastTurn", target = "followedPricingGuidelinesToPromoteFastTurn")
    @Mapping(source = "salesManagerPreOwned.achievedDepartmentUnitsPerformanceGoal", target = "achievedDepartmentUnitsPerformanceGoal")
    @Mapping(source = "salesManagerPreOwned.achievedDepartmentGrossGoal", target = "achievedDepartmentGrossGoal")
    @Mapping(source = "salesManagerPreOwned.achieved10CarsPerSalespersonAverage", target = "achieved10CarsPerSalespersonAverage")
    @Mapping(source = "salesManagerPreOwned.areThereAnyTitlesMissing", target = "areThereAnyTitlesMissing")
    @Mapping(source = "salesManagerPreOwned.hasAPhysicalInventoryBeenConducted", target = "hasAPhysicalInventoryBeenConducted")
    @Mapping(source = "salesManagerPreOwned.allStateGuidelinesForAdvertisingFollowed", target = "allStateGuidelinesForAdvertisingFollowed")
    @Mapping(source = "salesManagerPreOwned.allSoldDealsWorksheetsSavedInFiles", target = "allSoldDealsWorksheetsSavedInFiles")
    @Mapping(source = "salesManagerPreOwned.truthAndLendingDisclosuresFollowed", target = "truthAndLendingDisclosuresFollowed")
    @Mapping(source = "salesManagerPreOwned.allSafetyInspectionsConductedPriorToOffering", target = "allSafetyInspectionsConductedPriorToOffering")
    @Mapping(source = "salesManagerPreOwned.allDisclosuresHavePricingClearlyMarked", target = "allDisclosuresHavePricingClearlyMarked")
    @Mapping(source = "salesManagerPreOwned.allVehiclesOfferedHaveTitlesInStore", target = "allVehiclesOfferedHaveTitlesInStore")
    @Mapping(source = "salesManagerPreOwned.allCarfaxAutochecksReviewedAndSignedCopyKept", target = "allCarfaxAutochecksReviewedAndSignedCopyKept")
    @Mapping(source = "salesManagerPreOwned.customerRequestedToSpeakToPreviousCustomer", target = "customerRequestedToSpeakToPreviousCustomer")
    @Mapping(source = "salesManagerPreOwned.sixtyDealsClosedForMonth", target = "sixtyDealsClosedForMonth")
    FormularioSalesManagerPreOwned toEntityFormularioSalesManagerPreOwned(VirtualAssistanceDto virtualAssistanceDto);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "financeDirector.allTransactionsHaveRisk", target = "allTransactionsHaveRisk")
    @Mapping(source = "financeDirector.contractsResolved", target = "contractsResolved")
    @Mapping(source = "financeDirector.ofacChecksConducted", target = "ofacChecksConducted")
    @Mapping(source = "financeDirector.riskBasePricingNotice", target = "riskBasePricingNotice")
    @Mapping(source = "financeDirector.customerInfoPrivate", target = "customerInfoPrivate")
    @Mapping(source = "financeDirector.creditApplicationsFilled", target = "creditApplicationsFilled")
    @Mapping(source = "financeDirector.titlesCollected", target = "titlesCollected")
    @Mapping(source = "financeDirector.preventCashShortages", target = "preventCashShortages")
    @Mapping(source = "financeDirector.productReserveRatio", target = "productReserveRatio")
    @Mapping(source = "financeDirector.chargebacksExceedTenPercent", target = "chargebacksExceedTenPercent")
    @Mapping(source = "financeDirector.performanceMinimumsForFinanceManagers", target = "performanceMinimumsForFinanceManagers")
    @Mapping(source = "financeDirector.performanceRequirementsMet", target = "performanceRequirementsMet")
    @Mapping(source = "financeDirector.idVerificationsCompleted", target = "idVerificationsCompleted")
    @Mapping(source = "financeDirector.redFlagsRulesFollowed", target = "redFlagsRulesFollowed")
    @Mapping(source = "financeDirector.pendingProductCancellations", target = "pendingProductCancellations")
    @Mapping(source = "financeDirector.csiPerformanceScoresMet", target = "csiPerformanceScoresMet")
    @Mapping(source = "financeDirector.dealsEvenlyDistributed", target = "dealsEvenlyDistributed")
    @Mapping(source = "financeDirector.zeroReturnedContracts", target = "zeroReturnedContracts")
    @Mapping(source = "financeDirector.declinationNoticesSent", target = "declinationNoticesSent")
    @Mapping(source = "financeDirector.warrantyPenetrationAchieved", target = "warrantyPenetrationAchieved")
    @Mapping(source = "financeDirector.gapPenetrationAchieved", target = "gapPenetrationAchieved")
    @Mapping(source = "financeDirector.maintenancePenetrationAchieved", target = "maintenancePenetrationAchieved")
    @Mapping(source = "financeDirector.chemicalPenetrationAchieved", target = "chemicalPenetrationAchieved")
    @Mapping(source = "financeDirector.trainingSessionsConducted", target = "trainingSessionsConducted")
    @Mapping(source = "financeDirector.initiativesForNextMonth", target = "initiativesForNextMonth")
    @Mapping(source = "financeDirector.goalsWritten", target = "goalsWritten")
    @Mapping(source = "financeDirector.promoteTeamworkMeasures", target = "promoteTeamworkMeasures")
    @Mapping(source = "financeDirector.maintainHighMoraleMeasures", target = "maintainHighMoraleMeasures")
    @Mapping(source = "financeDirector.trainingRequirementsMet", target = "trainingRequirementsMet")
    @Mapping(source = "financeDirector.personalImprovementAreas", target = "personalImprovementAreas")
    FormularioFinanceDirector toEntityFormularioFinanceDirector(VirtualAssistanceDto virtualAssistanceDto);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "internetSalesManager.responseTime", target = "responseTime")
    @Mapping(source = "internetSalesManager.totalLeads", target = "totalLeads")
    @Mapping(source = "internetSalesManager.closingRatio", target = "closingRatio")
    @Mapping(source = "internetSalesManager.vehiclesHavePictures", target = "vehiclesHavePictures")
    @Mapping(source = "internetSalesManager.vehiclesHaveComments", target = "vehiclesHaveComments")
    @Mapping(source = "internetSalesManager.commentsIncludeGeotargeting", target = "commentsIncludeGeotargeting")
    @Mapping(source = "internetSalesManager.vehiclesHavePrices", target = "vehiclesHavePrices")
    @Mapping(source = "internetSalesManager.fbLikesGoalAttained", target = "fbLikesGoalAttained")
    @Mapping(source = "internetSalesManager.reviewsGoalAchieved", target = "reviewsGoalAchieved")
    @Mapping(source = "internetSalesManager.negativeReviewsAnswered", target = "negativeReviewsAnswered")
    @Mapping(source = "internetSalesManager.teamMembersHaveCoBrandedWebsites", target = "teamMembersHaveCoBrandedWebsites")
    @Mapping(source = "internetSalesManager.teamMembersOnLinkedin", target = "teamMembersOnLinkedin")
    @Mapping(source = "internetSalesManager.teamMembersOnInstagram", target = "teamMembersOnInstagram")
    @Mapping(source = "internetSalesManager.srpVdpAutotrader", target = "srpVdpAutotrader")
    @Mapping(source = "internetSalesManager.carsComAchieved", target = "carsComAchieved")
    @Mapping(source = "internetSalesManager.clickThroughRatio", target = "clickThroughRatio")
    @Mapping(source = "internetSalesManager.ppcCampaignsSales", target = "ppcCampaignsSales")
    @Mapping(source = "internetSalesManager.leadReportSourceCompleted", target = "leadReportSourceCompleted")
    @Mapping(source = "internetSalesManager.roiReportCompleted", target = "roiReportCompleted")
    @Mapping(source = "internetSalesManager.seoAnalysisConducted", target = "seoAnalysisConducted")
    @Mapping(source = "internetSalesManager.correctiveActionSeoAgency", target = "correctiveActionSeoAgency")
    @Mapping(source = "internetSalesManager.salesRecordMetOrSet", target = "salesRecordMetOrSet")
    @Mapping(source = "internetSalesManager.vehiclesAcquiredKbbIco", target = "vehiclesAcquiredKbbIco")
    @Mapping(source = "internetSalesManager.vehiclesPurchasedVehicleXchange", target = "vehiclesPurchasedVehicleXchange")
    @Mapping(source = "internetSalesManager.vehiclesSoldByBdcVehicleXchange", target = "vehiclesSoldByBdcVehicleXchange")
    @Mapping(source = "internetSalesManager.vehiclesTradedBySalesTeam", target = "vehiclesTradedBySalesTeam")
    @Mapping(source = "internetSalesManager.mysteryShopEmailsSent", target = "mysteryShopEmailsSent")
    @Mapping(source = "internetSalesManager.teamPerformanceRecognition", target = "teamPerformanceRecognition")
    @Mapping(source = "internetSalesManager.teamworkActivitiesConducted", target = "teamworkActivitiesConducted")
    @Mapping(source = "internetSalesManager.managementOfLeads", target = "managementOfLeads")
    @Mapping(source = "internetSalesManager.teamMembersDeliveredVehicles", target = "teamMembersDeliveredVehicles")
    @Mapping(source = "internetSalesManager.teamMeetingConducted", target = "teamMeetingConducted")
    @Mapping(source = "internetSalesManager.goalsWrittenDown", target = "goalsWrittenDown")
    @Mapping(source = "internetSalesManager.departmentStaffedProperly", target = "departmentStaffedProperly")
    @Mapping(source = "internetSalesManager.improvementInitiatives", target = "improvementInitiatives")
    @Mapping(source = "internetSalesManager.toolsForPerformance", target = "toolsForPerformance")
    FormularioInternetSalesManager toEntityFormularioInternetSalesManager(VirtualAssistanceDto virtualAssistanceDto);

    @Mapping(target = "id", ignore = true)
    @Mapping(source = "promotionalEvents.eventMaterialsReady", target = "eventMaterialsReady")
    @Mapping(source = "promotionalEvents.salesTags", target = "salesTags")
    @Mapping(source = "promotionalEvents.banners", target = "banners")
    @Mapping(source = "promotionalEvents.prizes", target = "prizes")
    @Mapping(source = "promotionalEvents.worksheets", target = "worksheets")
    @Mapping(source = "promotionalEvents.appraisalFormReady", target = "appraisalFormReady")
    @Mapping(source = "promotionalEvents.showroomDecorReady", target = "showroomDecorReady")
    @Mapping(source = "promotionalEvents.registrationTable", target = "registrationTable")
    @Mapping(source = "promotionalEvents.tablesForShowroom", target = "tablesForShowroom")
    @Mapping(source = "promotionalEvents.chairs", target = "chairs")
    @Mapping(source = "promotionalEvents.crowdControl", target = "crowdControl")
    @Mapping(source = "promotionalEvents.tentsValetParking", target = "tentsValetParking")
    @Mapping(source = "promotionalEvents.serviceTagsValetParking", target = "serviceTagsValetParking")
    @Mapping(source = "promotionalEvents.conesForParkingArea", target = "conesForParkingArea")
    @Mapping(source = "promotionalEvents.barricadesToRouteTraffic", target = "barricadesToRouteTraffic")
    @Mapping(source = "promotionalEvents.designatedParkingValet", target = "designatedParkingValet")
    @Mapping(source = "promotionalEvents.trafficFlowMapped", target = "trafficFlowMapped")
    @Mapping(source = "promotionalEvents.vestsForValet", target = "vestsForValet")
    @Mapping(source = "promotionalEvents.additionalStaff", target = "additionalStaff")
    @Mapping(source = "promotionalEvents.valetParking", target = "valetParking")
    @Mapping(source = "promotionalEvents.salesStaff", target = "salesStaff")
    @Mapping(source = "promotionalEvents.closers", target = "closers")
    @Mapping(source = "promotionalEvents.billers", target = "billers")
    @Mapping(source = "promotionalEvents.communicationPriorToSale", target = "communicationPriorToSale")
    @Mapping(source = "promotionalEvents.letterToAllStaff", target = "letterToAllStaff")
    @Mapping(source = "promotionalEvents.letterToServiceCustomer", target = "letterToServiceCustomer")
    @Mapping(source = "promotionalEvents.letterToVendors", target = "letterToVendors")
    @Mapping(source = "promotionalEvents.letterToOutsideSalesConsultants", target = "letterToOutsideSalesConsultants")
    @Mapping(source = "promotionalEvents.salesTools", target = "salesTools")
    @Mapping(source = "promotionalEvents.dealJacketsReady", target = "dealJacketsReady")
    @Mapping(source = "promotionalEvents.bookOutSheets", target = "bookOutSheets")
    @Mapping(source = "promotionalEvents.kbbRetailValuations", target = "kbbRetailValuations")
    @Mapping(source = "promotionalEvents.carfaxReports", target = "carfaxReports")
    @Mapping(source = "promotionalEvents.eventPromotedHighTraffic", target = "eventPromotedHighTraffic")
    @Mapping(source = "promotionalEvents.allEntryDoors", target = "allEntryDoors")
    @Mapping(source = "promotionalEvents.allWaitingAreas", target = "allWaitingAreas")
    @Mapping(source = "promotionalEvents.allRestrooms", target = "allRestrooms")
    @Mapping(source = "promotionalEvents.salesTagsMirrorMessage", target = "salesTagsMirrorMessage")
    @Mapping(source = "promotionalEvents.ECommerceSupport", target = "ECommerceSupport")
    @Mapping(source = "promotionalEvents.websiteBannersSupportEvent", target = "websiteBannersSupportEvent")
    @Mapping(source = "promotionalEvents.emailBlastToCustomers", target = "emailBlastToCustomers")
    @Mapping(source = "promotionalEvents.emailToOutsideSalesConsultants", target = "emailToOutsideSalesConsultants")
    @Mapping(source = "promotionalEvents.emailToVendors", target = "emailToVendors")
    @Mapping(source = "promotionalEvents.socialMediaSupportsEvent", target = "socialMediaSupportsEvent")
    @Mapping(source = "promotionalEvents.digitalBannersSupportEvent", target = "digitalBannersSupportEvent")
    @Mapping(source = "promotionalEvents.bannersIn3rdPartyVendor", target = "bannersIn3rdPartyVendor")
    @Mapping(source = "promotionalEvents.trainingForSalesStaff", target = "trainingForSalesStaff")
    @Mapping(source = "promotionalEvents.salesScriptsForOutboundCalls", target = "salesScriptsForOutboundCalls")
    @Mapping(source = "promotionalEvents.receptionistsGreetingSupportsEvent", target = "receptionistsGreetingSupportsEvent")
    @Mapping(source = "promotionalEvents.incentivesForReferralsStaff", target = "incentivesForReferralsStaff")
    @Mapping(source = "promotionalEvents.incentivesForReferralsVendors", target = "incentivesForReferralsVendors")
    @Mapping(source = "promotionalEvents.incentivesForReferralsCustomers", target = "incentivesForReferralsCustomers")
    @Mapping(source = "promotionalEvents.pepRallyPriorToEvent", target = "pepRallyPriorToEvent")
    @Mapping(source = "promotionalEvents.dailySalesMeetings", target = "dailySalesMeetings")
    @Mapping(source = "promotionalEvents.thankYouLetterToStaff", target = "thankYouLetterToStaff")
    @Mapping(source = "promotionalEvents.communicationToCustomersWeb", target = "communicationToCustomersWeb")
    @Mapping(source = "promotionalEvents.socialMediaSupportToShareResults", target = "socialMediaSupportToShareResults")
    @Mapping(source = "promotionalEvents.pepRallyAfterEvent", target = "pepRallyAfterEvent")
    FormularioPromotionalEvent toEntityFormularioPromotionalEvent(VirtualAssistanceDto virtualAssistanceDto);
}
